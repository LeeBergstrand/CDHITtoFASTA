#!/usr/bin/env python
# Created by: Lee Bergstrand
# Description: A simple program takes a list of protein accessions and an amino acid FASTA file
# 			   and extracts proteins that cluster around those clusters according to clustering
# 		       generated by CD-HIT.
#
# Requirements: - This script requires the Biopython module: http://biopython.org/wiki/Download
#
# Usage: lib.py <sequenceList.txt> <sequences.faa> <cdhit.clstr>
# Example: lib.py sequenceList.txt sequences.faa cdhit.clstr
# ----------------------------------------------------------------------------------------
# ===========================================================================================================
# Imports:
from lib import *
import argparse


def main(args):
	reference_list_path = args.reference_list[0]
	sequence_file_path = args.sequence_file[0]
	cluster_file_path = args.cluster_file[0]

	print("\nGenerating CD-HIT cluster FASTA files...\n")

	print("Sequence list file:  " + reference_list_path)
	print("Sequence FASTA file: " + sequence_file_path)
	print("CD-Hit cluster file: " + cluster_file_path + "\n")

	check_file_extensions(reference_list_path, sequence_file_path, cluster_file_path)

	reference_list = get_reference_list(reference_list_path)
	#print(reference_list)

	fasta_dict = get_fasta_dict(sequence_file_path)
	#print(fasta_dict)

	cluster_list = get_cluster_list(cluster_file_path)
	print(cluster_list)

if __name__ == '__main__':
	# ------------------------------
	descriptor = """
	A simple program takes a list of protein accessions and an amino acid FASTA file
	and extracts proteins that cluster around reference proteins according to clusterings
	generated by CD-HIT.
	"""
	# ------------------------------

	parser = argparse.ArgumentParser(description=descriptor)

	parser.add_argument('-i', '--cluster_file', metavar='CLUSTER', nargs=1, help='''
	CD-Hit cluster file which provides clustering information.''')

	parser.add_argument('-s', '--sequence_file', metavar='FASTA', nargs=1, help='''
	FASTA file which provides sequences to be extracted.''')

	parser.add_argument('-r', '--reference_list', metavar='LIST', nargs=1, help='''
	File of sequence identifiers (one per line) who's CD-HIT clusters should turned into FASTA files.''')

	cli_args = parser.parse_args()

	# At minimum we require a query, query DB and subject DB to proceed.
	proceed = True

	if cli_args.reference_list is None:
		print("Error: Missing sequence list path...")
		proceed = False

	if cli_args.sequence_file is None:
		print("Error: Missing sequence FASTA file path...")
		proceed = False

	if cli_args.cluster_file is None:
		print("Error: Missing query BLAST database path...")
		proceed = False

	if proceed:
		main(cli_args)
	else:
		print("")
		parser.print_help()
		print("")
